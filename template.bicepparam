using 'template.bicep'

var prefix = readEnvironmentVariable('RESOURCE_PREFIX')
var sanitizedPrefix = replace(prefix, '-', '')
param apiImageName = 'api'
// param apiUrl = 'https://parkki-testi.turku.fi'
param apiInternalUrl = '${prefix}-api.azurewebsites.net'
param apiUrl = 'https://parkki.turku.fi'
param apiUrlAllowedHost = 'parkki.turku.fi'
param apiReplicaUrlAllowedHost = 'parkkiopas.turku.fi'
param apiWebAppName = '${prefix}-api'
//param apiReplicaUrl = 'https://parkkiopas-testi.turku.fi'
param apiReplicaInternalUrl = '${prefix}-replica-api.azurewebsites.net'
param apiReplicaUrl = 'https://parkkiopas.turku.fi'
param apiReplicaWebAppName = '${prefix}-replica-api'
param appInsightsName = '${prefix}-appinsights'
param cacheName = '${prefix}-cache'
param containerRegistryName = '${sanitizedPrefix}registry'
param dbName = 'parkkihub'
param dbServerName = '${prefix}-db'
param dbServerReplicaName = '${prefix}-replica-db'
param dbAdminUsername = 'turkuadmin'
// param dbUsername = 'parkkihub_testi'
param dbUsername = 'parkkihub_prod'
param keyvaultName = '${sanitizedPrefix}-kv'
param serverfarmPlanName = 'serviceplan'
param storageAccountName = '${sanitizedPrefix}store'
// param apiOutboundIpName = 'turku-test-parkkihub-outbound-ip'
param apiOutboundIpName = 'turku-prod-parkkihub-outbound-ip'
param natGatewayName = '${prefix}-nat'
param vnetName =  '${prefix}-vnet'
param workspaceName = '${prefix}-workspace'
